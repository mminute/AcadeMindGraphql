const express = require('express');
const bodyParser = require('body-parser');
const graphqlHttp = require('express-graphql');
const { buildSchema } = require('graphql'); // takes string to build schema object

const app = express();

app.use(bodyParser.json());

app.use('/graphql', graphqlHttp({
  schema: buildSchema(`
    type RootQuery {
      events: [String!]!
    }

    type RootMutation {
      createEvent(name: String): String
    }

    schema {
      query: RootQuery
      mutation: RootMutation
    }
  `), // valid graphql schema generated by graphql package
  rootValue: {
    events: () => {
      return ['cooking', 'sailing', 'all night coding'];
    },
    createEvent: (args) => {
      const eventName = args.name;
      return eventName;
    },
  }, // resolver functions match schema endpoints by name
  graphiql: true,
}));

app.listen(3000);
